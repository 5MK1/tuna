version: "3.9"
services:
  redis:
    image: "redislabs/redisearch:latest"
    container_name: "redis-tuna"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 2s
      retries: 10
    volumes:
      - redis_data:/data
  postgres:
    image: postgres:16.3
    environment:
      POSTGRES_DB: "tunadb"
      POSTGRES_USER: "tunausr"
      POSTGRES_PASSWORD: "ilovetuna"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - tunadb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tunausr -d tunadb"]
      interval: 1s
      timeout: 2s
      retries: 10
      start_period: 10s
    restart: unless-stopped
  postgres-migrations:
    build:
      context: "./server"
      dockerfile: "PgMigrations.Dockerfile"
    container_name: "tuna-pg-migrations"
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    depends_on:
      postgres:
        condition: service_healthy
  api:
    build:
      context: "./server"
      dockerfile: "Dockerfile"
    container_name: "tuna-api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_Kestrel__Certificates__Default__Password=superPassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro
    ports:
      - "5050:5000"
    depends_on:
      redis:
        condition: service_healthy
      postgres-migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
volumes:
  redis_data:
  tunadb-data: